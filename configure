#!/usr/bin/env zsh
#新しい環境に取り込んだ時のインストール

set -x
DIR=$(cd $(dirname $0); pwd)

if [ ! -e $(which git) ]; then
  echo 'not found git'
fi 

if [ ! -e $(which vim) ]; then
  echo 'not found vim.'
  echo 'Start installing ...'
  $DIR/scripts/vim-install.sh
fi 

if [[ -e $(which python) ]]; then
  # Install powerline
  pip install powerline-status powerline-mem-segment psutil netifaces
fi 


setup_link()
{
  from=$1
  to=$2

  if [[ -e $to ]]; then
    if [[ -L $to ]]; then
      return
    elif [[ -d $to ]]; then
      echo 'Linked:' $from.(:a) 'into' $to
      ln -sfv $from(:a) $to
      return
    else
      echo "aborted: Already ${dstpath} exists"
      return
    fi 
  else
  fi

  ln -sf $from(:A) $to
  echo 'Linked:' $from '=>' $to
}

for dotfile in `git ls-tree --name-only HEAD | grep '^[._]'`; do
  if [[ $dotfile =~ ".git($|module|ignore)" ]]; then
      continue
  fi
  # ex) ./_gitignore -> .gitignore
  dstpath="${HOME}/${${dotfile##*/}:s:_git:.git:}"
  setup_link $dotfile $dstpath
done


for dotfile in $DIR/local_template/.*(.) ; do
  file_name="${dotfile##*/}" 

  dstpath="$HOME/.local$file_name"
  if [ -e $dstpath ]; then
    echo "Already exists: ${dstpath}"
  else
    echo "$dotfile => $dstpath" 
    cp $dotfile $dstpath
  fi 
done

for dotfile in $DIR/scripts/*(x) ; do
  file_name="${dotfile##*/}" 
  dstpath="$HOME/.local/bin/${dotfile##*/}" 
  setup_link $dotfile $dstpath
done

ln -sf $DIR/.zsh/zshenv.home ${HOME}/.zshenv

# vim:sw=2
